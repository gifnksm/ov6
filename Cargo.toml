[workspace]
members = [
    "crates/common/ov6_fs_types",
    "crates/common/ov6_kernel_params",
    "crates/common/ov6_syscall",
    "crates/common/ov6_types",
    "crates/common/safe_cast",
    "crates/kernel/block_io",
    "crates/kernel/lru",
    "crates/kernel/mutex_api",
    "crates/kernel/once_init",
    "crates/kernel/ov6_kernel",
    "crates/kernel/page_alloc",
    "crates/kernel/slab_allocator",
    "crates/user/ov6_user_lib",
    "crates/user/ov6_utilities",
    "crates/user/ov6_user_tests",
    "crates/user/ov6_initcode",
    "crates/user/ov6_services",
    "crates/utils/ov6_fs_utilities",
    "crates/utils/ov6_integration_tests",
]
resolver = "2"

[workspace.package]
version = "0.1.0"
edition = "2024"
authors = ["gifnksm <makoto.nksm+github@gmail.com>"]
description = "Oxide xv6 - A Rust rewrite of xv6 operating system"
readme = "README.md"
repository = "https://github.com/gifnksm/ov6"
license = "MIT"
keywords = ["xv6", "riscv", "rust", "operating-system"]
publish = false

[workspace.dependencies]
anyhow = "1.0.97"
arrayvec = { version = "0.7.6", default-features = false }
bitflags = "2.9.0"
dataview = "1.0.1"
derive_more = { version = "2.0.1", default-features = false, features = ["from"] }
fs4 = "0.13.1"
memchr = { version = "2.7.4", default-features = false, features = ["alloc"] }
rand = "0.9.0"
riscv = "0.13.0"
strum = { version = "0.27.1", default-features = false, features = ["derive"] }
thiserror = { version = "2.0.12", default-features = false }
tokio = { version = "1.44.1" }
vcell = "0.1.3"

block_io = { path = "crates/kernel/block_io" }
lru = { path = "crates/kernel/lru" }
mutex_api = { path = "crates/kernel/mutex_api" }
once_init = { path = "crates/kernel/once_init" }
ov6_fs_types = { path = "crates/common/ov6_fs_types" }
ov6_kernel_params = { path = "crates/common/ov6_kernel_params" }
ov6_syscall = { path = "crates/common/ov6_syscall" }
ov6_types = { path = "crates/common/ov6_types" }
ov6_user_lib = { path = "crates/user/ov6_user_lib" }
page_alloc = { path = "crates/kernel/page_alloc" }
slab_allocator = { path = "crates/kernel/slab_allocator" }

[profile.release]
debug = "full"
panic = "abort"
lto = "fat"

[profile.dev]
debug = "full"
panic = "abort"

[profile.initcode]
inherits = "release"
debug = "full"
lto = "fat"

[workspace.lints.rust]
deprecated-safe = "warn"
future-incompatible = "warn"
nonstandard-style = "warn"
unused = "warn"

[workspace.lints.clippy]
# pedantic group
pedantic = { level = "warn", priority = -1 }
missing_errors_doc = "allow"
similar_names = "allow"

# restriction group
alloc_instead_of_core = "warn"
allow_attributes = "warn"
as_pointer_underscore = "warn"
as_underscore = "warn"
assertions_on_result_states = "warn"
clone_on_ref_ptr = "warn"
default_union_representation = "warn"
doc_include_without_cfg = "warn"
empty_drop = "warn"
error_impl_error = "warn"
get_unwrap = "warn"
if_then_some_else_none = "warn"
map_err_ignore = "warn"
map_with_unused_argument_over_ranges = "warn"
# missing_assert_message = "warn"
# missing_docs_in_private_items = "warn"
# multiple_unsafe_ops_per_block = "warn"
needless_raw_strings = "warn"
non_zero_suggestions = "warn"
precedence_bits = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
redundant_type_annotations = "warn"
ref_patterns = "warn"
rest_pat_in_fully_bound_structs = "warn"
return_and_then = "warn"
renamed_function_params = "warn"
# same_name_method = "warn"
self_named_module_files = "warn"
semicolon_inside_block = "warn"
single_char_add_str = "warn"
single_char_pattern = "warn"
str_to_string = "warn"
string_add = "warn"
string_lit_chars_any = "warn"
string_to_string = "warn"
suspicious_xor_used_as_pow = "warn"
tests_outside_test_module = "warn"
try_err = "warn"
# undocumented_unsafe_blocks = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unnecessary_self_imports = "warn"
unseparated_literal_suffix = "warn"
unused_result_ok = "warn"
unused_trait_names = "warn"
# unwrap_in_result = "warn"

# nursery group
as_ptr_cast_mut = "warn"
collection_is_never_read = "warn"
clear_with_drain = "warn"
debug_assert_with_mut_call = "warn"
derive_partial_eq_without_eq = "warn"
doc_link_code = "warn"
equatable_if_let = "warn"
fallible_impl_from = "warn"
iter_on_empty_collections = "warn"
iter_on_single_items = "warn"
iter_with_drain = "warn"
large_stack_frames = "warn"
literal_string_with_formatting_args = "warn"
# missing_const_for_fn = "warn"
needless_collect = "warn"
needless_pass_by_ref_mut = "warn"
# non_send_fields_in_send_ty = "warn"
nonstandard_macro_braces = "warn"
option_if_let_else = "warn"
or_fun_call = "warn"
redundant_clone = "warn"
set_contains_or_insert = "warn"
single_option_map = "warn"
string_lit_as_bytes = "warn"
suspicious_operation_groupings = "warn"
too_long_first_doc_paragraph = "warn"
trailing_empty_array = "warn"
trait_duplication_in_bounds = "warn"
transmute_undefined_repr = "warn"
tuple_array_conversions = "warn"
type_repetition_in_bounds = "warn"
uninhabited_references = "warn"
unnecessary_struct_initialization = "warn"
unused_peekable = "warn"
use_self = "warn"
useless_let_if_seq = "warn"

# cargo group
cargo = { level = "warn", priority = -1 }
