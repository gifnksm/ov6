[workspace]
members = [
    "crates/block_io",
    "crates/lru",
    "crates/mutex_api",
    "crates/once_init",
    "crates/ov6_fs_types",
    "crates/ov6_kernel_params",
    "crates/ov6_syscall",
    "crates/ov6_types",
    "crates/ov6_user_lib",
    "crates/page_alloc",
    "crates/slab_allocator",
    "kernel",
    "mkfs",
    "user"
]
resolver = "2"

[workspace.package]
version = "0.1.0"
edition = "2024"
authors = ["gifnksm <makoto.nksm+github@gmail.com>"]
description = "Oxide xv6 - A Rust rewrite of xv6 operating system"
readme = "README.md"
repository = "https://github.com/gifnksm/ov6"
license = "MIT"
keywords = ["xv6", "riscv", "rust", "operating-system"]
publish = false

[workspace.dependencies]
arrayvec = { version = "0.7.6", default-features = false }
bitflags = "2.9.0"
dataview = "1.0.1"
memchr = { version = "2.7.4", default-features = false, features = ["alloc"] }
riscv = "0.12.1"
strum = { version = "0.27.1", default-features = false, features = ["derive"] }
thiserror = { version = "2.0.12", default-features = false }

block_io = { path = "crates/block_io" }
lru = { path = "crates/lru" }
mutex_api = { path = "crates/mutex_api" }
once_init = { path = "crates/once_init" }
ov6_fs_types = { path = "crates/ov6_fs_types" }
ov6_kernel_params = { path = "crates/ov6_kernel_params" }
ov6_syscall = { path = "crates/ov6_syscall" }
ov6_types = { path = "crates/ov6_types" }
ov6_user_lib = { path = "crates/ov6_user_lib" }
page_alloc = { path = "crates/page_alloc" }
slab_allocator = { path = "crates/slab_allocator" }

[profile.release]
debug = "full"
panic = "abort"
lto = "fat"

[profile.dev]
debug = "full"
panic = "abort"

[profile.initcode]
inherits = "release"
debug = "full"
lto = "fat"

[workspace.lints.rust]
deprecated-safe = "warn"
future-incompatible = "warn"
nonstandard-style = "warn"
unused = "warn"

[workspace.lints.clippy]
# pedantic = "warn"

alloc_instead_of_core = "warn"
allow_attributes = "warn"
as_pointer_underscore = "warn"
as_ptr_cast_mut = "warn"
as_underscore = "warn"
assertions_on_result_states = "warn"
assign_op_pattern = "warn"
assigning_clones = "warn"
bool_to_int_with_if = "warn"
borrow_as_ptr = "warn"
cargo_common_metadata = "warn"
cast_lossless = "warn"
cast_possible_truncation = "warn"
# cast_possible_wrap = "warn"
cast_ptr_alignment = "warn"
# cast_sign_loss = "warn"
checked_conversions = "warn"
clear_with_drain = "warn"
clone_on_ref_ptr = "warn"
cloned_instead_of_copied = "warn"
collection_is_never_read = "warn"
comparison_chain = "warn"
copy_iterator = "warn"
debug_assert_with_mut_call = "warn"
default_trait_access = "warn"
default_union_representation = "warn"
derive_partial_eq_without_eq = "warn"
doc_include_without_cfg = "warn"
doc_link_code = "warn"
doc_link_with_quotes = "warn"
doc_markdown = "warn"
elidable_lifetime_names = "warn"
empty_drop = "warn"
equatable_if_let = "warn"
error_impl_error = "warn"
expl_impl_clone_on_copy = "warn"
explicit_deref_methods = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
fallible_impl_from = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
fn_params_excessive_bools = "warn"
format_collect = "warn"
format_push_string = "warn"
from_iter_instead_of_collect = "warn"
get_unwrap = "warn"
if_not_else = "warn"
if_then_some_else_none = "warn"
ignored_unit_patterns = "warn"
inefficient_to_string = "warn"
invalid_upcast_comparisons = "warn"
iter_filter_is_ok = "warn"
iter_filter_is_some = "warn"
iter_not_returning_iterator = "warn"
iter_on_empty_collections = "warn"
iter_on_single_items = "warn"
iter_with_drain = "warn"
large_digit_groups = "warn"
large_stack_arrays = "warn"
large_stack_frames = "warn"
large_types_passed_by_value = "warn"
literal_string_with_formatting_args = "warn"
macro_use_imports = "warn"
manual_assert = "warn"
manual_is_power_of_two = "warn"
manual_is_variant_and = "warn"
manual_let_else = "warn"
manual_midpoint = "warn"
manual_string_new = "warn"
map_err_ignore = "warn"
map_unwrap_or = "warn"
map_with_unused_argument_over_ranges = "warn"
match_bool = "warn"
match_on_vec_items = "warn"
match_wild_err_arm = "warn"
match_wildcard_for_single_variants = "warn"
maybe_infinite_iter = "warn"
mismatching_type_param_order = "warn"
# missing_assert_message = "warn"
# missing_docs_in_private_items = "warn"
# missing_errors_doc = "warn"
missing_fields_in_debug = "warn"
# missing_panics_doc = "warn"
# multiple_unsafe_ops_per_block = "warn"
must_use_candidate = "warn"
mut_mut = "warn"
needless_bitwise_bool = "warn"
needless_collect = "warn"
needless_for_each = "warn"
needless_pass_by_ref_mut = "warn"
# needless_pass_by_value = "warn"
needless_raw_string_hashes = "warn"
needless_raw_strings = "warn"
negative_feature_names = "warn"
no_effect_underscore_binding = "warn"
no_mangle_with_rust_abi = "warn"
# non_send_fields_in_send_ty = "warn"
non_std_lazy_statics = "warn"
non_zero_suggestions = "warn"
nonstandard_macro_braces = "warn"
option_as_ref_cloned = "warn"
option_if_let_else = "warn"
option_option = "warn"
or_fun_call = "warn"
precedence_bits = "warn"
ptr_as_ptr = "warn"
ptr_cast_constness = "warn"
range_minus_one = "warn"
range_plus_one = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
redundant_clone = "warn"
redundant_closure_for_method_calls = "warn"
redundant_else = "warn"
redundant_feature_names = "warn"
redundant_type_annotations = "warn"
ref_as_ptr = "warn"
ref_binding_to_reference = "warn"
ref_option = "warn"
ref_option_ref = "warn"
ref_patterns = "warn"
renamed_function_params = "warn"
rest_pat_in_fully_bound_structs = "warn"
return_and_then = "warn"
return_self_not_must_use = "warn"
same_functions_in_if_condition = "warn"
# same_name_method = "warn"
# self_named_module_files = "warn"
semicolon_inside_block = "warn"
set_contains_or_insert = "warn"
single_char_add_str = "warn"
single_char_pattern = "warn"
single_option_map = "warn"
stable_sort_primitive = "warn"
str_split_at_newline = "warn"
str_to_string = "warn"
string_add = "warn"
string_add_assign = "warn"
string_lit_as_bytes = "warn"
string_lit_chars_any = "warn"
string_to_string = "warn"
suspicious_operation_groupings = "warn"
suspicious_xor_used_as_pow = "warn"
tests_outside_test_module = "warn"
too_long_first_doc_paragraph = "warn"
too_many_lines = "warn"
trailing_empty_array = "warn"
trait_duplication_in_bounds = "warn"
transmute_ptr_to_ptr = "warn"
transmute_undefined_repr = "warn"
trivially_copy_pass_by_ref  = "warn"
try_err = "warn"
tuple_array_conversions = "warn"
type_repetition_in_bounds = "warn"
# undocumented_unsafe_blocks = "warn"
uninhabited_references = "warn"
uninlined_format_args = "warn"
unnecessary_box_returns = "warn"
unnecessary_debug_formatting = "warn"
unnecessary_join = "warn"
unnecessary_literal_bound = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unnecessary_self_imports = "warn"
unnecessary_semicolon = "warn"
unnecessary_struct_initialization = "warn"
# unnecessary_wraps = "warn"
unnested_or_patterns = "warn"
unreadable_literal = "warn"
unseparated_literal_suffix = "warn"
unused_peekable = "warn"
unused_result_ok = "warn"
unused_self = "warn"
unused_trait_names = "warn"
# unwrap_in_result = "warn"
use_self = "warn"
used_underscore_binding = "warn"
used_underscore_items = "warn"
useless_let_if_seq = "warn"
verbose_bit_mask = "warn"
zero_sized_map_values = "warn"
